apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: titconn-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: nas-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: titconn-hub-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: titconn-hub
  template:
    metadata:
      labels:
        app: titconn-hub
    spec:
      containers:
      - name: titconn-hub-container
        image: images.teknobulut.net/titconnbr/titconn-hub:2025.8.4.2
        imagePullPolicy: Always
        volumeMounts:
            - name: titconn-data
              mountPath: /var/titconn
        env:
            - name: ASPNETCORE_URLS
      volumes:
          - name: titconn-data
            persistentVolumeClaim:
               claimName: titconn-pvc
      imagePullSecrets:
      - name: harborsecret
---
apiVersion: v1
kind: Service
metadata:
  name: titconn-hub-service
  labels:
   app: titconn-hub-service
spec:
  selector:
    app: titconn-hub
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  type: ClusterIP
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: titconn-hub-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  rules:
    - host: wms-hub.brmagazacilik.com.tr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
               service:
                 name: titconn-hub-service
                 port: 
                   number: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: titconn-api-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: titconn-api
  template:
    metadata:
      labels:
        app: titconn-api
    spec:
      containers:
      - name: titconn-api-container
        image: images.teknobulut.net/titconnbr/titconn-api:2025.8.4.2
        imagePullPolicy: Always
        volumeMounts:
            - name: titconn-data
              mountPath: /var/titconn
        env:
            - name: ASPNETCORE_URLS
      imagePullSecrets:
      - name: harborsecret
      volumes:
          - name: titconn-data
            persistentVolumeClaim:
               claimName: titconn-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: titconn-api-service
  labels:
   app: titconn-api-service
spec:
  selector:
    app: titconn-api
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  type: ClusterIP
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: titconn-api-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  rules:
    - host: wms-api.brmagazacilik.com.tr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
               service:
                 name: titconn-api-service
                 port: 
                   number: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: titconn-app-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: titconn-app
  template:
    metadata:
      labels:
        app: titconn-app
    spec:
      containers:
      - name: titconn-app-container
        image: images.teknobulut.net/titconnbr/titconn-app:2025.8.4.2
        imagePullPolicy: Always
        env:
            - name: ASPNETCORE_URLS
      imagePullSecrets:
      - name: harborsecret
---
apiVersion: v1
kind: Service
metadata:
  name: titconn-app-service
  labels:
   app: titconn-app-service
spec:
  selector:
    app: titconn-app
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  type: ClusterIP
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: titconn-app-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  rules:
    - host: wms-app.brmagazacilik.com.tr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
               service:
                 name: titconn-app-service
                 port: 
                   number: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: titconn-microservice-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: titconn-microservice
  template:
    metadata:
      labels:
        app: titconn-microservice
    spec:
      containers:
      - name: titconn-microservice-container
        image: images.teknobulut.net/titconnbr/titconn-microservice:2025.8.4.2
        imagePullPolicy: Always
        volumeMounts:
            - name: titconn-data
              mountPath: /var/titconn
        env:
            - name: ASPNETCORE_URLS
      imagePullSecrets:
      - name: harborsecret
      volumes:
          - name: titconn-data
            persistentVolumeClaim:
               claimName: titconn-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: titconn-microservice-service
  labels:
   app: titconn-microservice-service
spec:
  selector:
    app: titconn-microservice
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  type: ClusterIP
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: titconn-microservice-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  rules:
    - host: wms-microservice.brmagazacilik.com.tr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
               service:
                 name: titconn-microservice-service
                 port: 
                   number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: titconn-scheduler-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: titconn-scheduler
  template:
    metadata:
      labels:
        app: titconn-scheduler
    spec:
      containers:
      - name: titconn-scheduler-container
        image: images.teknobulut.net/titconnbr/titconn-scheduler:2025.8.4.2
        imagePullPolicy: Always
        volumeMounts:
            - name: titconn-data
              mountPath: /var/titconn
        env:
            - name: ASPNETCORE_URLS
        resources:
          requests:
            memory: "5Gi"
          limits:
            memory: "5Gi"
      imagePullSecrets:
      - name: harborsecret
      volumes:
          - name: titconn-data
            persistentVolumeClaim:
               claimName: titconn-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: titconn-scheduler-service
  labels:
   app: titconn-scheduler-service
spec:
  selector:
    app: titconn-scheduler
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  type: ClusterIP
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: titconn-scheduler-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  rules:
    - host: wms-scheduler.brmagazacilik.com.tr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
               service:
                 name: titconn-scheduler-service
                 port: 
                   number: 8080